<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:customControls="clr-namespace:RadialMenu.CustomControls"
    xmlns:Converters="clr-namespace:BaseProj.Converters;assembly=BaseProj"
    xmlns:buttons="clr-namespace:BaseProj.Buttons;assembly=BaseProj"
    xmlns:converters="clr-namespace:RadialMenu.Converters">

    <Style TargetType="customControls:RadialMenu">

        <Setter Property="Opacity" Value="1" />
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="Height" Value="400" />
        <Setter Property="Width" Value="400" />

        <!-- RadialMenu template -->
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="customControls:RadialMenu">
                    <Canvas>

                        <!-- RadialMenu background -->
                        <Ellipse Fill="Transparent"
                                 Width="{TemplateBinding Width}"
                                 Height="{TemplateBinding Height}"
                                 Stroke="{TemplateBinding Background}"
                                 StrokeThickness="{Binding RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, Converter={converters:RadialMenuItemsCountToStrokeThickness}}" />

                        <!-- Content repitition (for items around) -->
                        <ItemsControl ItemsSource="{TemplateBinding Content}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Grid />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>

                        <!-- Delete Sector -->
                        <Border Height="32"
                                Width="32"
                                CornerRadius="100"
                                Panel.ZIndex="2"
                                Visibility="{Binding CurrentItem.IsShowUIButtons, RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, Converter={Converters:BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                            <buttons:ButtonSVG Command="{TemplateBinding DeleteSectorCommand}"
                                               SVGHeight="12"
                                               SVGWidth="12"
                                               Drawing="{TemplateBinding DeleteSectorDrawing}"
                                               CornerRadius="100"
                                               ColorShiftBrush="#303030"
                                               VerticalContentAlignment="Center"
                                               HorizontalContentAlignment="Center"
                                               SnapsToDevicePixels="True"
                                               HighlightedBackground="White"
                                               BorderBrush="Black"
                                               HighlightedForeground="#303030"
                                               Background="#c2c2c2">
                                <buttons:ButtonSVG.Style>
                                    <Style TargetType="{x:Type buttons:ButtonSVG}">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver"
                                                     Value="True">
                                                <Setter Property="Height"
                                                        Value="{Binding CurrentItem.UIButtonSizeHovered, RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, FallbackValue=0}" />
                                                <Setter Property="Width"
                                                        Value="{Binding CurrentItem.UIButtonSizeHovered, RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, FallbackValue=0}" />
                                                <Setter Property="BorderThickness"
                                                        Value="3" />
                                                <Setter Property="HighlightedBorderBrush"
                                                        Value="#303030" />
                                            </Trigger>

                                            <Trigger Property="IsMouseOver"
                                                     Value="False">
                                                <Setter Property="Height"
                                                        Value="{Binding CurrentItem.UIButtonSize, RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, FallbackValue=0}" />
                                                <Setter Property="Width"
                                                        Value="{Binding CurrentItem.UIButtonSize, RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, FallbackValue=0}" />
                                                <Setter Property="BorderThickness"
                                                        Value="2" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </buttons:ButtonSVG.Style>
                            </buttons:ButtonSVG>
                            <Canvas.Left>
                                <MultiBinding Converter="{converters:RadialMenuItemToUIButtonsPosition}"
                                              ConverterParameter="X">
                                    <Binding Path=""
                                             RelativeSource="{RelativeSource AncestorType=customControls:RadialMenu}" />
                                    <Binding Path=""
                                             Converter="{Converters:ParameterToStringConverter}"
                                             ConverterParameter="Down" />
                                    <Binding Path="CurrentItem"
                                             RelativeSource="{RelativeSource AncestorType=customControls:RadialMenu}" />
                                </MultiBinding>
                            </Canvas.Left>
                            <Canvas.Top>
                                <MultiBinding Converter="{converters:RadialMenuItemToUIButtonsPosition}"
                                              ConverterParameter="Y">
                                    <Binding Path=""
                                             RelativeSource="{RelativeSource AncestorType=customControls:RadialMenu}" />
                                    <Binding Path=""
                                             Converter="{Converters:ParameterToStringConverter}"
                                             ConverterParameter="Down" />
                                    <Binding Path="CurrentItem"
                                             RelativeSource="{RelativeSource AncestorType=customControls:RadialMenu}" />
                                </MultiBinding>
                            </Canvas.Top>
                        </Border>

                        <!-- Add SubMenu -->
                        <Border Height="32"
                                Width="32"
                                CornerRadius="100"
                                Panel.ZIndex="2">
                            <Border.Visibility>
                                <MultiBinding
                                    Converter="{Converters:MultiBooleanParametrizedConverterToVisibilityConverter}"
                                    FallbackValue="Collapsed"
                                    ConverterParameter="({0} &amp;&amp; {1})">
                                    <Binding Path="CurrentItem.IsShowUIButtons"
                                             RelativeSource="{RelativeSource AncestorType=customControls:RadialMenu}" />
                                    <Binding Path="CurrentItem.IsHasSubMenu"
                                             RelativeSource="{RelativeSource AncestorType=customControls:RadialMenu}"
                                             Converter="{Converters:InverseBooleanConverter}" />
                                </MultiBinding>
                            </Border.Visibility>
                            <buttons:ButtonSVG Command="{TemplateBinding DeleteSectorCommand}"
                                               SVGHeight="12"
                                               SVGWidth="12"
                                               Drawing="{TemplateBinding AddSubConfigDrawing}"
                                               CornerRadius="100"
                                               ColorShiftBrush="#303030"
                                               VerticalContentAlignment="Center"
                                               HorizontalContentAlignment="Center"
                                               SnapsToDevicePixels="True"
                                               HighlightedBackground="White"
                                               BorderBrush="Black"
                                               HighlightedForeground="#303030"
                                               Background="#c2c2c2">
                                <buttons:ButtonSVG.Style>
                                    <Style TargetType="{x:Type buttons:ButtonSVG}">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver"
                                                     Value="True">
                                                <Setter Property="Height"
                                                        Value="{Binding CurrentItem.UIButtonSizeHovered, RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, FallbackValue=0}" />
                                                <Setter Property="Width"
                                                        Value="{Binding CurrentItem.UIButtonSizeHovered, RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, FallbackValue=0}" />
                                                <Setter Property="BorderThickness"
                                                        Value="3" />
                                                <Setter Property="HighlightedBorderBrush"
                                                        Value="#303030" />
                                            </Trigger>

                                            <Trigger Property="IsMouseOver"
                                                     Value="False">
                                                <Setter Property="Height"
                                                        Value="{Binding CurrentItem.UIButtonSize, RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, FallbackValue=0}" />
                                                <Setter Property="Width"
                                                        Value="{Binding CurrentItem.UIButtonSize, RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, FallbackValue=0}" />
                                                <Setter Property="BorderThickness"
                                                        Value="2" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </buttons:ButtonSVG.Style>
                            </buttons:ButtonSVG>
                            <Canvas.Left>
                                <MultiBinding Converter="{converters:RadialMenuItemToUIButtonsPosition}"
                                              ConverterParameter="X">
                                    <Binding Path=""
                                             RelativeSource="{RelativeSource AncestorType=customControls:RadialMenu}" />
                                    <Binding Path=""
                                             Converter="{Converters:ParameterToStringConverter}"
                                             ConverterParameter="Top" />
                                    <Binding Path="CurrentItem"
                                             RelativeSource="{RelativeSource AncestorType=customControls:RadialMenu}" />
                                </MultiBinding>
                            </Canvas.Left>
                            <Canvas.Top>
                                <MultiBinding Converter="{converters:RadialMenuItemToUIButtonsPosition}"
                                              ConverterParameter="Y">
                                    <Binding Path=""
                                             RelativeSource="{RelativeSource AncestorType=customControls:RadialMenu}" />
                                    <Binding Path=""
                                             Converter="{Converters:ParameterToStringConverter}"
                                             ConverterParameter="Top" />
                                    <Binding Path="CurrentItem"
                                             RelativeSource="{RelativeSource AncestorType=customControls:RadialMenu}" />
                                </MultiBinding>
                            </Canvas.Top>
                        </Border>

                        <!-- Add Sector (above) -->
                        <Border Height="32"
                                Width="32"
                                CornerRadius="100"
                                Panel.ZIndex="2"
                                Visibility="{Binding CurrentItem.IsShowUIButtons, RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, Converter={Converters:BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                            <buttons:ButtonSVG Command="{TemplateBinding DeleteSectorCommand}"
                                               SVGHeight="12"
                                               SVGWidth="12"
                                               Drawing="{TemplateBinding AddSectorDrawing}"
                                               CornerRadius="100"
                                               ColorShiftBrush="#303030"
                                               VerticalContentAlignment="Center"
                                               HorizontalContentAlignment="Center"
                                               SnapsToDevicePixels="True"
                                               HighlightedBackground="White"
                                               BorderBrush="Black"
                                               HighlightedForeground="#303030"
                                               Background="#c2c2c2">
                                <buttons:ButtonSVG.Style>
                                    <Style TargetType="{x:Type buttons:ButtonSVG}">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver"
                                                     Value="True">
                                                <Setter Property="Height"
                                                        Value="{Binding CurrentItem.UIButtonSizeHovered, RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, FallbackValue=0}" />
                                                <Setter Property="Width"
                                                        Value="{Binding CurrentItem.UIButtonSizeHovered, RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, FallbackValue=0}" />
                                                <Setter Property="BorderThickness"
                                                        Value="3" />
                                                <Setter Property="HighlightedBorderBrush"
                                                        Value="#303030" />
                                            </Trigger>

                                            <Trigger Property="IsMouseOver"
                                                     Value="False">
                                                <Setter Property="Height"
                                                        Value="{Binding CurrentItem.UIButtonSize, RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, FallbackValue=0}" />
                                                <Setter Property="Width"
                                                        Value="{Binding CurrentItem.UIButtonSize, RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, FallbackValue=0}" />
                                                <Setter Property="BorderThickness"
                                                        Value="2" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </buttons:ButtonSVG.Style>
                            </buttons:ButtonSVG>
                            <Canvas.Left>
                                <MultiBinding Converter="{converters:RadialMenuItemToUIButtonsPosition}"
                                              ConverterParameter="X">
                                    <Binding Path=""
                                             RelativeSource="{RelativeSource AncestorType=customControls:RadialMenu}" />
                                    <Binding Path=""
                                             Converter="{Converters:ParameterToStringConverter}"
                                             ConverterParameter="left" />
                                    <Binding Path="CurrentItem"
                                             RelativeSource="{RelativeSource AncestorType=customControls:RadialMenu}" />
                                </MultiBinding>
                            </Canvas.Left>
                            <Canvas.Top>
                                <MultiBinding Converter="{converters:RadialMenuItemToUIButtonsPosition}"
                                              ConverterParameter="Y">
                                    <Binding Path=""
                                             RelativeSource="{RelativeSource AncestorType=customControls:RadialMenu}" />
                                    <Binding Path=""
                                             Converter="{Converters:ParameterToStringConverter}"
                                             ConverterParameter="left" />
                                    <Binding Path="CurrentItem"
                                             RelativeSource="{RelativeSource AncestorType=customControls:RadialMenu}" />
                                </MultiBinding>
                            </Canvas.Top>
                        </Border>

                        <!-- Add Sector (after) -->
                        <Border Height="32"
                                Width="32"
                                CornerRadius="100"
                                Panel.ZIndex="2"
                                Visibility="{Binding CurrentItem.IsShowUIButtons, RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, Converter={Converters:BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                            <buttons:ButtonSVG Command="{TemplateBinding DeleteSectorCommand}"
                                               SVGHeight="12"
                                               SVGWidth="12"
                                               Drawing="{TemplateBinding AddSectorDrawing}"
                                               CornerRadius="100"
                                               ColorShiftBrush="#303030"
                                               VerticalContentAlignment="Center"
                                               HorizontalContentAlignment="Center"
                                               SnapsToDevicePixels="True"
                                               HighlightedBackground="White"
                                               BorderBrush="Black"
                                               HighlightedForeground="#303030"
                                               Background="#c2c2c2">
                                <buttons:ButtonSVG.Style>
                                    <Style TargetType="{x:Type buttons:ButtonSVG}">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver"
                                                     Value="True">
                                                <Setter Property="Height"
                                                        Value="{Binding CurrentItem.UIButtonSizeHovered, RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, FallbackValue=0}" />
                                                <Setter Property="Width"
                                                        Value="{Binding CurrentItem.UIButtonSizeHovered, RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, FallbackValue=0}" />
                                                <Setter Property="BorderThickness"
                                                        Value="3" />
                                                <Setter Property="HighlightedBorderBrush"
                                                        Value="#303030" />
                                            </Trigger>

                                            <Trigger Property="IsMouseOver"
                                                     Value="False">
                                                <Setter Property="Height"
                                                        Value="{Binding CurrentItem.UIButtonSize, RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, FallbackValue=0}" />
                                                <Setter Property="Width"
                                                        Value="{Binding CurrentItem.UIButtonSize, RelativeSource={RelativeSource AncestorType=customControls:RadialMenu}, FallbackValue=0}" />
                                                <Setter Property="BorderThickness"
                                                        Value="2" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </buttons:ButtonSVG.Style>
                            </buttons:ButtonSVG>
                            <Canvas.Left>
                                <MultiBinding Converter="{converters:RadialMenuItemToUIButtonsPosition}"
                                              ConverterParameter="X">
                                    <Binding Path=""
                                             RelativeSource="{RelativeSource AncestorType=customControls:RadialMenu}" />
                                    <Binding Path=""
                                             Converter="{Converters:ParameterToStringConverter}"
                                             ConverterParameter="right" />
                                    <Binding Path="CurrentItem"
                                             RelativeSource="{RelativeSource AncestorType=customControls:RadialMenu}" />
                                </MultiBinding>
                            </Canvas.Left>
                            <Canvas.Top>
                                <MultiBinding Converter="{converters:RadialMenuItemToUIButtonsPosition}"
                                              ConverterParameter="Y">
                                    <Binding Path=""
                                             RelativeSource="{RelativeSource AncestorType=customControls:RadialMenu}" />
                                    <Binding Path=""
                                             Converter="{Converters:ParameterToStringConverter}"
                                             ConverterParameter="right" />
                                    <Binding Path="CurrentItem"
                                             RelativeSource="{RelativeSource AncestorType=customControls:RadialMenu}" />
                                </MultiBinding>
                            </Canvas.Top>
                        </Border>
                    </Canvas>
                </ControlTemplate>

            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>